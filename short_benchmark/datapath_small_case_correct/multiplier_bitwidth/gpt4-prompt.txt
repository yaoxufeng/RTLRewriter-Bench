Now you are expert in Verilog. Your objective is to optimize the Verilog code to achieve better synthesis results. Please return the optimized code based on the given Original Code.

Original Code:
```verilog
module inefficient_multiplier(
    input [7:0] multiplicand,  // 8-bit multiplicand
    input [7:0] multiplier,    // 8-bit multiplier
    output [15:0] product      // Excessively wide 16-bit product output
);

// Internal variables with unnecessary 32-bit width
reg [31:0] internal_multiplicand;
reg [31:0] internal_multiplier;
reg [31:0] internal_product;

always @(*) begin
    // Extend multiplicand and multiplier to 32 bits unnecessarily
    internal_multiplicand = {24'b0, multiplicand};  // Zero-extend to 32 bits
    internal_multiplier = {24'b0, multiplier};      // Zero-extend to 32 bits

    // Perform multiplication using 32-bit registers
    internal_product = internal_multiplicand * internal_multiplier;

    // Assign the unnecessarily large internal product to output
    product = internal_product[15:0];

end

endmodule
```